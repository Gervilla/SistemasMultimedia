package sm.pgp.biblioteca.Lienzos;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.font.TextAttribute;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.util.ArrayList;
import java.util.Map;
import sm.pgp.biblioteca.Figuras.Tipo;

/**
 *
 * @author gervi
 */
public class Lienzo2DCopia extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo2D
     */
    private Color color = Color.BLACK;
    private Tipo figura = Tipo.TRAZO;
    private boolean relleno;
    private float trazo = 1; 
    private Rectangle rectangulo;
    private Point p1, p2;
    private Shape actualShape;
    private ArrayList<Shape> vShape = new ArrayList();
    boolean editar = false;
    boolean renderizar = false;
    boolean transparencia = false;
    
    public Lienzo2DCopia() {
        initComponents();
    }
    
    
    @Override
    public void paint(Graphics g){
        super.paint(g);
        Graphics2D g2d = (Graphics2D)g;
        g2d.setColor(color);
        this.setAtributos(g2d);
        for (Shape s:vShape)
            g2d.draw(s);
    }
    
    protected void setAtributos(Graphics2D g2d){
        Stroke trazo;
        trazo = new BasicStroke(this.trazo, BasicStroke.CAP_ROUND, BasicStroke.JOIN_MITER, 1.0f);
        g2d.setStroke(trazo);


        if(this.transparencia){
            Composite composicion;
            composicion = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);
            g2d.setComposite(composicion);
        }

        if(this.relleno){
            Paint relleno;
            relleno = this.getColor();
            g2d.setPaint(relleno);
            
            for(Shape s:vShape)
                g2d.fill(s);
        }

        if(this.renderizar){
            RenderingHints render;
            render = new RenderingHints(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setRenderingHints(render);
        }
    }
    
    public void setColor(Color color){
        this.color = color;
    }
    public Color getColor(){
        return color;
    }

    public void setRelleno(){
        this.relleno = !this.relleno;
        repaint();
    }
    
    public void setTrazo(float trazo){
        this.trazo = trazo;
        repaint();
    }

    public void setFigura(Tipo figura){
        this.figura = figura;
    }
    
    public void setTransparencia(){
        this.transparencia = !this.transparencia;
        repaint();
    }
    
    public void setRenderizado(){
        this.renderizar = !this.renderizar;
        repaint();
    }
    
    public void setEdicion(){
        this.editar = !this.editar;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        if(!this.editar){
            p1 = evt.getPoint();
            switch (figura){
                case TRAZO:
                    vShape.add(new Ellipse2D.Double(p1.x-2.5, p1.y-2.5, 5, 5));
                    break;

                case LINEA:
                    actualShape = new Line2D.Double(p1, p1);
                    vShape.add(actualShape);
                    break;

                case RECTANGULO:
                    actualShape = new Rectangle(p1);
                    vShape.add(actualShape);
                    break;

                case OVALO:
                    actualShape = new Ellipse2D.Double(p1.x, p1.y, 0, 0);
                    vShape.add(actualShape);
                    break;

                case ABANICO:
                    vShape.add(new Line2D.Double(p1, p1));
                    break;
            }
        }
        else{
            for(Shape s:vShape){
                if(s.contains(p1)) 
                    actualShape = s;
            }
        }
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        this.formMouseDragged(evt);
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        if(!this.editar){
            p2 = evt.getPoint();
            switch (figura){
                case TRAZO:
                    vShape.add(new Ellipse2D.Double(p2.x-2.5, p2.y-2.5, 5, 5));
                    break;

                case LINEA:
                    ((Line2D)actualShape).setLine(p1, p2);
                    break;

                case RECTANGULO:
                    ((Rectangle)actualShape).setFrameFromDiagonal(p1, evt.getPoint());
                    break;

                case OVALO:
                    ((Ellipse2D)actualShape).setFrameFromDiagonal(p1, evt.getPoint());
                    break;

                case ABANICO:
                    vShape.add(new Line2D.Double(p1, p2));
                    break;
            }
        }
        else{
            if(actualShape!=null){
                if(actualShape.getClass().equals(new Rectangle().getClass()))
                    ((Rectangle)actualShape).setLocation(evt.getPoint());
            }
        }
        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
